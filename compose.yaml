services:
  rembg:
    image: danielgatis/rembg
    platform: linux/arm64
    environment:
      - U2NET_HOME=/var/lib/.u2net/
    ports:
      - "7001:7001"
    volumes:
      - pgdata:/var/lib/.u2net/
    command: >
      s --host 0.0.0.0 --port 7001 --log_level info
    networks:
      - outfits-ai-network

  segment:
    image: ironnicko1413/outfits.ai-segment:latest
    build:
      context: Segment/
      dockerfile: Dockerfile
    environment:
      - HF_HOME=/var/lib/.u2net/
    ports:
      - "8001:8001"
    env_file:
      - ./.env
    volumes:
      - pgdata:/var/lib/.u2net/
    networks:
      - outfits-ai-network


  backend:
    image: ironnicko1413/outfits.ai-backend:latest
    build:
      context: Go-Backend/
      dockerfile: Dockerfile
    env_file:
      - ./.env
    environment:
      - PRODUCTION=prod

    networks:
      - outfits-ai-network
    ports:
      - "8000:8000"

    # depends_on:
    #   postgres:
    #     condition: service_healthy
    # links:
    #   - postgres

  # postgres:
  #   image: pgvector/pgvector:pg17
  #   container_name: postgres
  #   env_file:
  #     - ./.env
  #   ports:
  #     - "5432:5432"
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U postgres"]
  #     interval: 1s
  #     retries: 5
  #   volumes:
  #     - pgdata:/var/lib/postgresql/data
  #   networks:
  #     - outfits-ai-network
  # frontend:
  #   image: ironnicko1413/outfits.ai-frontend:latest
  #   build:
  #     context: Frontend/
  #     dockerfile: Dockerfile
  #   env_file:
  #     - ./.env
  #   environment:
  #     - VITE_PUBLIC_IP=${VITE_PUBLIC_IP}
  #   ports:
  #     - "3000:3000"
  #   networks:
  #     - outfits-ai-network

volumes:
  pgdata:

networks:
  outfits-ai-network:
      driver: bridge